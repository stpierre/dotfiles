#!/bin/zsh
# This hook is run after every virtualenv is activated.

name=$(basename "$VIRTUAL_ENV")

# generate a list of all possible project names for this
# virtualenv. start with the base name and the base name with python-
# prepended, e.g., for OpenStack client libraries
names=($name python-$name)

# if the virtualenv name contains a dash, strip off the stuff after
# the dash in case it's an openstack version (e.g., "nova-kilo")
dash=$(expr index "$name" -)
if [[ $dash -ne 0 ]]; then
    names+=("${name:0:$((dash - 1))}")
fi

cdproject

for dir in bin sbin src/bin src/sbin; do
    if [[ -e $repo_path/$dir ]]; then
        pathmunge "$(pwd)"/"$dir"
    fi
done

echo "Installing requirements..."
for fname in requirements.txt pip-requirements.txt requirements.pip \
    test-requirements.txt test-requirements.pip test-requires \
    pip-requires; do
    for dir in . tools test tests testsuite; do
        if [[ -e $dir/$fname ]]; then
            pip install -r "$dir"/"$fname"
        fi
    done
done

# install common tools for every virtualenv
echo "Installing common tools..."
pip install ptpython pep8 flake8 pylint docutils ndg-httpsclient

if [[ -e tox.ini ]]; then
    pip install tox
fi

python_version=$(python -c 'import sys;print("%s.%s" % (sys.version_info.major, sys.version_info.minor))')

if [[ -d /usr/lib64/python"$python_version"/site-packages/selinux ]]; then
    venv_site_packages="$VIRTUAL_ENV"/lib/python"$python_version"/site-packages
    if [[ -e $venv_site_packages ]]; then
        # we install selinux unconditionally because a) it's super
        # quick; and b) after an update we want to get the latest
        # libraries.
        echo "Hackishly installing selinux"
        \cp -fR /usr/lib64/python"$python_version"/site-packages/selinux \
            /usr/lib64/python"$python_version"/site-packages/_selinux.*so \
            "$VIRTUAL_ENV"/lib/python"$python_version"/site-packages
    else
        echo "$venv_site_packages does not exist, cannot install SELinux" 1>&2
    fi
else
    echo "Could not find SELinux libraries to install" 1>&2
fi

rehash

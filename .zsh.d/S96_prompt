#!/bin/zsh

setopt prompt_subst

nbsp=$'\u00A0'

_get_prompt() {
    local time="${PR_BRIGHT_YELLOW}%T${PR_RESET} "

    local venv="$(get_venv_prompt_info)"
    local git_info="$(get_git_prompt_info)"
    local svn_info="$(get_svn_prompt_info)"

    if [[ -n $venv && ( -n $git_info || -n $svn_info ) ]]; then
        # gracefully degrade into a multiline prompt
        local cwd="%${PR_PWDLEN}<...<%~%<<"
        local user="%(!#${PR_SEP}${PR_BRIGHT_RED}%n${PR_RESET}#)"
        echo "${venv}${PR_SEP}${cwd}${PR_SEP}${git_info}${svn_info}
${time}${user}"
    else
        local cwd="%~"
        local user="%(!#${PR_BRIGHT_RED}%n${PR_RESET}${PR_SEP}#)"
        prompt=${time}${user}${cwd}
        if [[ -n $venv ]]; then
            prompt=$prompt$PR_SEP$venv
        fi
        if [[ -n $git_info || -n $svn_info ]]; then
            prompt=$prompt$PR_SEP$git_info$svn_info
        fi
        echo "$prompt"
    fi
}

_lprompt() {
    local retval="%(?##${PR_RED}[%?]${PR_RESET})"
    export PROMPT='$(_get_prompt)'"${retval}%#${nbsp}"
}

_rprompt() {
    local machine="${PR_BRIGHT_BLUE}["'$__CURRENT_HOSTNAME'"]${PR_RESET}"

    # if we're inside screen, then the hostname will be in the status
    # bar and we don't need it in the prompt, too
    if [[ -n $STY || $TERM[0,6] == "screen" || $TERM[0,5] == "eterm" ]]; then
        RPROMPT=""
    else
        RPROMPT="${machine}"
    fi
    export RPROMPT
}

_get_pwd_length() {
    local prompt="$(get_venv_prompt_info)$PR_SEP$(get_git_prompt_info)$PR_SEP$(get_svn_prompt_info)"
    local zero='%([BSUbfksu]|([FB]|){*})'
    promptlength=${#${(S%%)prompt//$~zero/}}
    PR_PWDLEN=$((COLUMNS - promptlength))
}

_lprompt
_rprompt
_get_pwd_length

add-zsh-hook preexec _get_pwd_length

# our prompt ends with a non-breaking space. this makes it clear the
# input buffer, so we can triple-click to copy and paste full
# lines. See #4 at
# http://chneukirchen.org/blog/archive/2013/03/10-fresh-zsh-tricks-you-may-not-know.html
bindkey -s $nbsp '^u'
